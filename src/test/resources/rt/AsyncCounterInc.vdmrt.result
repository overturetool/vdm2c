import org.overture.codegen.runtime.*;

import java.util.*;


@SuppressWarnings("all")
public class Entry implements EvaluatePP {
    private static final Number AsyncCalls = 10L;
    private volatile Number x = 0L;
    public volatile Sentinel sentinel;

    public Entry() {
        sentinel = new Entry_sentinel(this);
    }

    public void inc() {
        new VDMThread() {
                public void run() {
                    sentinel.entering(((Entry_sentinel) sentinel).inc);

                    try {
                        x = x.longValue() + 1L;
                        sentinel.stateChanged();
                    } finally {
                        sentinel.leaving(((Entry_sentinel) sentinel).inc);
                    }
                }
            }.start();
    }

    public void join() {
        sentinel.entering(((Entry_sentinel) sentinel).join);

        try {
            //Skip
        } finally {
            sentinel.leaving(((Entry_sentinel) sentinel).join);
        }
    }

    public Number fire() {
        sentinel.entering(((Entry_sentinel) sentinel).fire);

        try {
            long toVar_1 = AsyncCalls.longValue();

            for (Long i = 1L; i <= toVar_1; i++) {
                inc();
            }

            join();

            return x;
        } finally {
            sentinel.leaving(((Entry_sentinel) sentinel).fire);
        }
    }

    public static Object Run() {
        Entry e = new Entry();

        return e.fire();
    }

    public String toString() {
        return "Entry{" + "AsyncCalls = " + Utils.toString(AsyncCalls) +
        ", x := " + Utils.toString(x) + "}";
    }

    public Boolean evaluatePP(final Number fnr) {
        if (Utils.equals(fnr, 0L)) {
            return Utils.equals(sentinel.active[((Entry_sentinel) sentinel).inc],
                0L);
        } else if (Utils.equals(fnr, 1L)) {
            return Utils.equals(sentinel.fin[((Entry_sentinel) sentinel).inc],
                AsyncCalls);
        } else if (Utils.equals(fnr, 2L)) {
            return true;
        } else if (Utils.equals(fnr, 3L)) {
            return true;
        } else if (Utils.equals(fnr, 4L)) {
            return true;
        } else if (Utils.equals(fnr, 5L)) {
            return true;
        } else {
            return true;
        }
    }

    public static class Entry_sentinel extends Sentinel {
        public static final int inc = 0;
        public static final int join = 1;
        public static final int fire = 2;
        public static final int Run = 3;
        public static final int Entry = 4;
        public static final int toString = 5;
        public final int function_sum = 6;

        public Entry_sentinel() {
        }

        public Entry_sentinel(final EvaluatePP instance) {
            init(instance, function_sum);
        }
    }
}

##########
