// The template for class

\#include $XFormat.getIncludeClassName($node)
\#include <stdio.h>



// Memory management methods
void $XFormat.getClassName($node)_free_fields(struct $XFormat.getClassName($node) *this)
{
	//free class struct
#foreach( $field in $node.getFields() )
	vdmFree(this->m_$XFormat.getClassName($node)_$field.getName());
#end
}

static void $XFormat.getClassName($node)_free(struct $XFormat.getClassName($node) *this)
{
	--this->_$XFormat.getClassName($node)_refs;
	if (this->_$XFormat.getClassName($node)_refs < 1)
	{
		$XFormat.getClassName($node)_free_fields(this);
		free(this);
	}
}

// The methods
#foreach( $method in $node.getMethods() )
#if(!$method.getIsConstructor())
$XFormat.format($method)
#end
#end

// The table
static struct VTable VTableArrayFor$XFormat.getClassName($node) [] =
{
#foreach( $method in $node.getMethods() )
#if(!$method.getIsConstructor()){ 0, 0, (VirtualFunctionPointer) $method.getName() },
#end
#end
};

// The constructor
$XFormat.getClassName($node)CLASS $XFormat.getClassName($node)_Constructor($XFormat.getClassName($node)CLASS this_ptr)
{

	if(this_ptr==NULL)
	{
		this_ptr = ($XFormat.getClassName($node)CLASS) malloc(sizeof(struct $XFormat.getClassName($node)));
	}

	if(this_ptr!=NULL)
	{
		this_ptr->_$XFormat.getClassName($node)_id = CLASS_ID_$XFormat.getClassName($node)_ID;
		this_ptr->_$XFormat.getClassName($node)_refs = 0;
		this_ptr->_$XFormat.getClassName($node)_pVTable=VTableArrayFor$XFormat.getClassName($node);

	#foreach( $field in $node.getFields() )
	this_ptr->m_$XFormat.getClassName($node)_$field.getName()= $XFormat.format($field.getInitial());
	#end
}

	return this_ptr;
}

// Method for creating new "class"
static TVP new()
{
	$XFormat.getClassName($node)CLASS ptr=$XFormat.getClassName($node)_Constructor(NULL);

	return newTypeValue(VDM_CLASS, (TypedValueType)
			{	.ptr=newClassValue(ptr->_$XFormat.getClassName($node)_id, &ptr->_$XFormat.getClassName($node)_refs, (freeVdmClassFunction)&$XFormat.getClassName($node)_free, ptr)});
}

const struct $XFormat.getClassName($node)Class $XFormat.getClassName($node) =
{ ._new = &new };