class ExpressionSetForCGTesting
functions

protected setRange: () -> bool
setRange() ==
	card {1, ... ,6} = 6;

protected setInset: () -> bool
setInset() ==
	(3 in set {3}) and 
	(1 in set {0, 1}) and
	(0 in set {0, 1});

protected setNotInSet: () -> bool
setNotInSet() ==
	(not (3 not in set {3})) and
	(2 not in set {3});

protected setUnion: () -> bool
setUnion() ==
	(1 in set ({1, 2} union {3, 4})) and
	(2 in set ({1, 2} union {3, 4})) and
	(3 in set ({1, 2} union {3, 4})) and
	(4 in set ({1, 2} union {3, 4})) and
	(card ({1, 2} union {3, 4}) <= (card {1, 2}) + (card {3, 4}));
	
protected setIntersection: () -> bool
setIntersection() ==
	(({1, 2} inter {2, 3}) subset {1, 2}) and
	(({1, 2} inter {2, 3}) subset {2, 3}) and
	(card ({1, 2} inter {2, 3}) <= card {1, 2}) and
	(card ({1, 2} inter {2, 3}) <= card {2, 3});
	
protected setDifference : () -> bool
setDifference() ==
	(({1, 2} \ {1}) subset {1, 2}) and
	((({1, 2} \ {1}) inter {1}) = {});
	
protected setSubset : () -> bool
	setSubset() ==
		({1, 2} subset {1, 2}) and
		({1} subset {1, 2}) and
		(not ({1} subset {2}));
		
protected setProperSubset : () -> bool
setProperSubset() ==
		(not ({1, 2} psubset {1, 2})) and
		({1} psubset {1, 2}) and
		(not ({1} psubset {2, 3}));
		
protected setEquality : () -> bool
setEquality() ==
	({1} = {1}) and
	(not ({1} = {2}));
	
protected setInequality : () -> bool
setInequality() ==
	(not ({1} <> {1})) and
	({1} <> {2});
	
protected setCard : () -> bool
setCard() ==
	(card {} = 0) and
	(card {1, 2} = 2);
	
protected setDunion : () -> bool
setDunion() ==
	(0 in set (dunion {{0}, {1}})) and
	(1 in set (dunion {{0}, {1}})) and
	({1, 2} subset (dunion {{1, 2}, {3, 4, 5}})) and
	({3, 4, 5} subset (dunion {{1, 2}, {3, 4, 5}}));
	
protected setDinter : () -> bool
setDinter() ==			
	((dinter {{1, 2}, {2, 3}}) = (dinter {{1, 2}, {2, 3}}) inter {1, 2}) and
	((dinter {{1, 2}, {2, 3}}) = (dinter {{1, 2}, {2, 3}}) inter {2, 3}) and
	(not ((dinter {{1, 2}, {2, 3}}) = (dinter {{1, 2}, {2, 3}}) inter {1, 6, 3}));

protected setPower : () -> bool
setPower() ==
	({} in set power {1, 2, 3, 4}) and
	({3} in set power {1, 2, 3, 4}) and
	({2, 3} in set power {1, 2, 3, 4}) and
	(not ({2, 5} in set power {1, 2, 3, 4}));
end ExpressionSetForCGTesting